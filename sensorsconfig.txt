
#include "MQ135.h"
#include "DHT.h"
#include <SPI.h>
#include <Ethernet.h>
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED }; //Setting MAC Address

#define DHTPIN 2
#define RLOAD 22.0
#define DHTTYPE DHT11

DHT dht(DHTPIN,DHTTYPE);
MQ135 gasSensor = MQ135(A2);


int gassensorPin = A2;
int gassensorValue = 0;
int soil_sensorPin = A0; 
const int pResistor = A1; // Photoresistor at Arduino analog pin A0
const int ledPin=9;       // Led pin at Arduino pin 9

int soil_sensorValue = 0;  
float humidityData = 0; 
float temperatureData = 0; 
int limit = 1000; 
int photovalue = 0; 
float co2amount = 0; 

char server[] = "192.168.2.102";
IPAddress ip(192,168,2,103); 
EthernetClient client; 

int tempsenId=1;
String temperaturesensorId = "temperaturesensorId=";

int lightsenId=2;
String lightsensorId = "& lightsensorId=";

int co2senId=3;
String co2sensorId = "& co2sensorId=";

int humsenId=4;
String humiditysensorId = "& humiditysensorId=";

String review;


/* Setup for Ethernet and RFID */

void setup() {
  Serial.begin(9600);
  dht.begin();

  pinMode(ledPin, OUTPUT);  // Set lepPin - 9 pin as an output
 pinMode(pResistor, INPUT);// Set pResistor - A1 pin as an input (optional)
  pinMode(gassensorPin, INPUT);
  if (Ethernet.begin(mac) == 0) {
  Serial.println("Failed to configure Ethernet using DHCP");
  Ethernet.begin(mac, ip);
  } 
  delay(1000);
}
//------------------------------------------------------------------------------


/* Infinite Loop */
void loop(){
  Sending_To_phpmyadmindatabase(); 
  delay(1000); // interval
}


  void Sending_To_phpmyadmindatabase()   //CONNECTING WITH MYSQL
 {
   if (client.connect(server, 80)) {
    Serial.println("connected");
    // Make a HTTP request:

//    temperatureAndHumiditySensor();
//    soilMoistureSensor();
//    lightSensor();
//    co2Sensor();
  
//    postData = postVariable + temperatureData;
//    postData2 = postVariable2 + humidityData;
//    postData3 = postVariable3 + soil_sensorValue;
//    postData4 = postVariable4 + photovalue;
//    postData5 = postVariable5 + co2amount;

    
    review = (temperaturesensorId+tempsenId + lightsensorId + lightsenId + co2sensorId + co2senId + humiditysensorId + humsenId);
    
    client.println("POST /MMS/SensorConfigurator.php HTTP/1.1");
    client.println("Host: 192.168.2.102");
    client.println("Content-Type: application/x-www-form-urlencoded");
    client.print("Content-Length: ");
    client.println(review.length());
    client.println();
    client.print(review);
//    Serial.print(review);

    String val1 = client.readStringUntil('\r');
    String val2 = client.readStringUntil('\r');
    String val3 = client.readStringUntil('\r');
    String val4 = client.readStringUntil('\r');
    String val5 = client.readStringUntil('\r');
    String val6 = client.readStringUntil('\r');
    String val7 = client.readStringUntil('\r');
    String val8 = client.readStringUntil('\r');

    Serial.print(val8);
//    String val9 = client.readStringUntil('=');
//    Serial.print(val9);
//    if(val8.length()==16){
////      Serial.println(client.readString());
//      double valit = client.readStringUntil('=').toDouble();
//      Serial.println(valit);
//    }
    
  } else {
    // if you didn't get a connection to the server:
    Serial.println("connection failed");
  }
 }

 void temperatureAndHumiditySensor(){
  humidityData = dht.readHumidity();
  temperatureData = dht.readTemperature(); 
 }

 void soilMoistureSensor(){
   soil_sensorValue = analogRead(soil_sensorPin); 
//   Serial.print("Soil Moisture Value : ");
//   Serial.println(soil_sensorValue);
//   
   if (soil_sensorValue>limit) {
   digitalWrite(8, HIGH); 
   }
   else {
   digitalWrite(8, LOW); 
   }
 }

 void lightSensor(){
  photovalue = analogRead(pResistor);
        
  //You can change value "25"
//  Serial.print("Light Value : ");
//  Serial.println(photovalue);
  if (photovalue > 25){
    digitalWrite(ledPin, LOW);  //Turn led off
  }
  else{
    digitalWrite(ledPin, HIGH); //Turn led on
  }
 }

 
void co2Sensor(){
  //gas sensor
   co2amount = gasSensor.getPPM();
//   Serial.print ("ppm: ");
//   Serial.println (co2amount);
   //end gas sensor
}